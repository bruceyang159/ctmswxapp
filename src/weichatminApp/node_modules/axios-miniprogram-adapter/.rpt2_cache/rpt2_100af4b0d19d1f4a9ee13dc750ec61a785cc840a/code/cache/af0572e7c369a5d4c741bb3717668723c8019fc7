{"code":"var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n// encoder\r\nfunction encoder(input) {\r\n    var str = String(input);\r\n    // initialize result and counter\r\n    var block;\r\n    var charCode;\r\n    var idx = 0;\r\n    var map = chars;\r\n    var output = '';\r\n    for (; \r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1); \r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\r\n        charCode = str.charCodeAt(idx += 3 / 4);\r\n        if (charCode > 0xFF) {\r\n            throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\r\n        }\r\n        block = block << 8 | charCode;\r\n    }\r\n    return output;\r\n}\r\nexport default encoder;\r\n","dts":{"name":"/Users/bigMeow/Downloads/axios-miniprogram-adapter/utils/encoder.d.ts","writeByteOrderMark":false,"text":"declare function encoder(input: any): string;\r\nexport default encoder;\r\n"}}
